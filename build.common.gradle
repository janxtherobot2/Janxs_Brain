apply plugin: 'com.android.application'

android {
    compileSdkVersion 26

    signingConfigs {
        release {
            def apkStoreFile = System.getenv("APK_SIGNING_STORE_FILE")
            if (apkStoreFile != null) {
                keyAlias System.getenv("APK_SIGNING_KEY_ALIAS")
                keyPassword System.getenv("APK_SIGNING_KEY_PASSWORD")
                storeFile file(System.getenv("APK_SIGNING_STORE_FILE"))
                storePassword System.getenv("APK_SIGNING_STORE_PASSWORD")
            } else {
                keyAlias 'androiddebugkey'
                keyPassword 'android'
                storeFile rootProject.file('libs/ftc.debug.keystore')
                storePassword 'android'
            }
        }

        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile rootProject.file('libs/ftc.debug.keystore')
            storePassword 'android'
        }
    }

    defaultConfig {
        signingConfig signingConfigs.debug
        applicationId 'com.qualcomm.ftcrobotcontroller'
        minSdkVersion 26  // Minimum SDK for Android 8.1
        targetSdkVersion 26  // Targeting Android 8.1
    }

    // Automatically extract versionCode and versionName from the AndroidManifest.xml file
    def manifestFile = project(':FtcRobotController').file('src/main/AndroidManifest.xml')
    def manifestText = manifestFile.getText()
    //
    def vCodePattern = Pattern.compile("versionCode=\"(\\d+(\\.\\d+)*)\"")
    def matcher = vCodePattern.matcher(manifestText)
    matcher.find()
    def vCode = Integer.parseInt(matcher.group(1))
    //
    def vNamePattern = Pattern.compile("versionName=\"(.*)\"")
    matcher = vNamePattern.matcher(manifestText)
    matcher.find()
    def vName = matcher.group(1)
    //
    versionCode vCode
    versionName vName

    buildTypes {
        release {
            signingConfig signingConfigs.release
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
        debug {
            debuggable true
            jniDebuggable true
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst '**/*.so'
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir rootProject.file('libs')
    }

    ndkVersion '21.3.6528147'
}

repositories {
    mavenCentral()
    google()
}